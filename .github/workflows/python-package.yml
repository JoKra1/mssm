# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# Adapted based on: https://github.com/pypa/cibuildwheel
# https://stackoverflow.com/questions/69257912/
# and the python-package-conda.yml

name: Python package

on:
  push:
    branches:
      - stable
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        os: [macos-latest,ubuntu-latest,windows-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    #- name: Install build
    #  run: |
    #    python -m pip install --upgrade build

    #- name: Build wheels
    #  run: python -m build

    #- uses: actions/upload-artifact@v3
    #  with:
    #    path: ./dist/*.whl

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.16.2

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      
    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl
        
  release:
    # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

    # https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
    # Only create release if pull-target was 'stable' or work-flow was triggered on 'stable'
    if: github.ref_name == 'stable' || github.base_ref == 'stable'
    needs:
      - build
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Necessary for creating releases apparently.

    steps:

      - name: Echo Branch
        run: echo "${{ github.ref_name }} ${{ github.base_ref }}"
      
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./wheelhouse/
        
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}_${{ github.sha }}'
          --repo '${{ github.repository }}'
          --notes ""
          
      - name: Connect Artifacts to release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}_${{ github.sha }}' ./wheelhouse/artifact/**
          --repo '${{ github.repository }}'

  publish-test:
    # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: test-pypi
      url: https://test.pypi.org/p/mssm

    permissions:
      id-token: write

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./wheelhouse/
          
      - name: Publish wheels to test-pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./wheelhouse/artifact
          repository-url: https://test.pypi.org/legacy/
